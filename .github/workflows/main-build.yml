name: Main build

on:
  push:
    branches: 'main'
    tags-ignore: 
      - 'v**'
  pull_request:
    branches: '*'

jobs:
  basic build:
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 15
    strategy:
      matrix:
        # test against latest update of each major Java version, as well as specific updates of LTS versions:
        java: [ 8 ]
        os: [ubuntu, macos, windows]
    name: with Java ${{ matrix.java }} on ${{ matrix.os }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v2
        with:
          # fetch unshallow to enable blame for Sonar
          fetch-depth: 0
      - name: Set up java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches/
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: Cache Sonar
        uses: actions/cache@v2
        if: matrix.os == 'ubuntu'
        with:
          path: ~/.sonar/cache/
          key: ${{ runner.os }}-sonar
      - name: Gradle build
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: --refresh-dependencies --stacktrace --scan clean build
      - name: Sonar analysis
        if: matrix.os == 'ubuntu'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: "61ab2579215aa8a0024a2f9368fc1298fdecfd18"
        run: echo "sonar" #./gradlew jacocoTestReport sonarqube --stacktrace -i


  "Maintainer execution is missing":
    if: "!contains(github.event.pull_request.labels.*.name, 'readyToMerge')"
    needs: "basic build"
    steps:
      - run: |
          echo "A Maintainer will execute this build as soon as it is ready to merge. This action is *NOT* failing due to an error on your side, it is just precaution."
  
  full-featured:
    if: contains(github.event.pull_request.labels.*.name, 'readyToMerge') || !github.event.pull_request
    needs: "basic build"
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 15
    strategy:
      matrix:
        # test against latest update of each major Java version, as well as specific updates of LTS versions:
        java: [ 11, 16 ]
        os: [ubuntu, macos, windows]
        modulare: [true, false]
        junit-version: [ '5.7.0', '5.7.1', '5.8.0-M1' ]
    name: with Java ${{ matrix.java }} on ${{ matrix.os }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v2
        with:
          # fetch unshallow to enable blame for Sonar
          fetch-depth: 0
      - name: Set up java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches/
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: Gradle build
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: --refresh-dependencies -PmodularBuild=${{ matrix.modular }} -PjunitVersion=${{ matrix.junit-version }} --stacktrace --scan clean build

  buildDone:
    name: buildOk
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: buildOk
        run: echo 'all builds passed'
