# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: JUnit Pioneer

on:
  push:
    branches: '**'
    tags-ignore: 
      - 'v**'
  pull_request:
    branches: '*'


jobs:
  build:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        # test against latest update of each major Java version, as well as specific updates of LTS versions:
        java: [ 8 ]
        os: [ubuntu]
    name: Build on ${{ matrix.os }} with Java ${{ matrix.java }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      # - name: Gradle build
      #   uses: eskatos/gradle-command-action@v1
      #   with:
      #     arguments: --refresh-dependencies --stacktrace --scan clean build
      # - name: Sonarqube
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   if:  matrix.java == '8' && matrix.os == 'ubuntu-remove-me'
      #   run: ./gradlew jacocoTestReport sonarqube --stacktrace -i

  deploy:
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
  # if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Perform Release
        uses: eskatos/gradle-command-action@v1
        env:
          TRAVIS_BRANCH: ${{ github.ref }}
          GH_WRITE_TOKEN: ${{ secrets.GH_WRITE_TOKEN }}
          BINTRAY_USER_NAME: ${{ secrets.BINTRAY_USER_NAME }}
          BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
          NEXUS_TOKEN_USERNAME: "<fill this out>"
          NEXUS_TOKEN_PASSWORD: "<fill this out>"
        with:
          arguments: ciPerformRelease 
      
      # shipkit generates a file called "release-needed.txt" we check if we need to publish to github
      - name: Check release is needed
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "release-needed.txt"
      - name: Release
        uses: softprops/action-gh-release@v1
        if: steps.check_files.outputs.files_exists == 'true'
        with:
          files: ./build/libs/junit-pioneer-*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Update Page
  #       uses: eskatos/gradle-command-action@v1
  #       with:
  #         arguments: triggerSiteBuild -P travisApiToken=${{ secrets.TRAVIS_API_TOKEN }} --stacktrace
      
